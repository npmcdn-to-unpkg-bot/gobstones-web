{"version":3,"sources":["scripts/stylist.js"],"names":[],"mappings":"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","file":"scripts/stylist.js","sourcesContent":["class Stylist {\n  constructor() {\n    this.DEFAULT_PERCENTAGE = 0.6;\n    this.TOOLBAR_HEIGHT = 102;\n    this.BOARD_CSS_CLASS = \".theBoard\";\n    this.BOARD_CONTAINER_CSS_CLASS = \".theBoardContainer\";\n    this.BOARD_CONTAINER_OFFSET = 8;\n    this.LEFT_PANEL_CSS_CLASS = \".panel-left\";\n  }\n\n  setPanelAsResizable(boardDimensions) {\n    const boardSize = this._getBoardSize(boardDimensions);\n\n    $(document).ready(() => {\n      this._makeResizable();\n      setTimeout(() => {\n        $(`${this.LEFT_PANEL_CSS_CLASS} .ui-resizable-s`).hide();\n        $(`${this.LEFT_PANEL_CSS_CLASS} .ui-resizable-se`).hide();\n\n        this._scaleAndCenterBoard(this.DEFAULT_PERCENTAGE, boardSize);\n      }, 0);\n    });\n\n    $(window).resize(() => {\n      this._beResponsive(boardSize);\n    });\n  }\n\n  updateBoardSize(boardDimensions) {\n    const boardSize = this._getBoardSize(boardDimensions);\n\n    const scale = this._getScale(this._getPercentage(), boardSize);\n    this.currentBoardWidth = boardSize.width;\n    this.currentBoardHeight = boardSize.height;\n\n    this._beResponsive(boardSize);\n  }\n\n  _beResponsive(boardSize) {\n    var percentage = this._keepAspectRatioOnWindowResize(this.LEFT_PANEL_CSS_CLASS);\n    this._scaleAndCenterBoard(percentage, boardSize);\n  }\n\n  _keepAspectRatioOnWindowResize() {\n    const documentWidth = $(document).width()\n    if (!this.lastDocumentWidth) {\n      this.lastDocumentWidth = documentWidth;\n      return this.DEFAULT_PERCENTAGE;\n    }\n\n    const percentage = this._getPercentage();\n\n    const leftPanel = $(this.LEFT_PANEL_CSS_CLASS);\n    leftPanel.width(documentWidth * percentage);\n    this.lastDocumentWidth = documentWidth;\n\n    return percentage;\n  }\n\n  _scaleAndCenterBoard(percentage, boardSize) {\n    const scale = this._getScale(percentage, boardSize);\n    $(this.BOARD_CSS_CLASS).css(\"transform\", `scale(${scale})`);\n    this._centerBoard(percentage, boardSize, scale);\n  }\n\n  _centerBoard(percentage, boardSize, scale) {\n    // center vertically\n    const middleY = ($(document).height() - this.TOOLBAR_HEIGHT) / 2;\n    const offsetY = this.currentBoardHeight / 2;\n    $(this.BOARD_CSS_CLASS).css(\"margin-top\", `${middleY - offsetY}px`);\n\n    // center horizontally\n    $(\".theBoardContainer\").width(0); // avoid increasing container width\n    const panelWidth = this._getRightPanelWidth($(document).width(), percentage);\n    const middleX = panelWidth / 2;\n    const offsetX = this.BOARD_CONTAINER_OFFSET + (this.currentBoardWidth * scale) / 2;\n    $(this.BOARD_CONTAINER_CSS_CLASS).css(\"margin-left\", `${middleX - offsetX}px`);\n  }\n\n  _makeResizable() {\n    const documentWidth = $(document).width()\n    $(this.LEFT_PANEL_CSS_CLASS).resizable({\n      resizeHeight: false\n    });\n  }\n\n  _getBoardSize(boardDimensions) {\n    return {\n      width: 39 + boardDimensions.x * 59,\n      height: 39 + boardDimensions.y * 59\n    };\n  }\n\n  _getRightPanelWidth(documentWidth, percentage) {\n    return documentWidth * (1 - percentage);\n  }\n\n  _getPercentage() {\n    const leftPanel = $(this.LEFT_PANEL_CSS_CLASS);\n    return leftPanel.width() / this.lastDocumentWidth;\n  }\n\n  _getScale(percentage, boardSize) {\n    // scaleY\n    const documentWidth = $(document).width()\n    const panelWidth = this._getRightPanelWidth(documentWidth, percentage);\n\n    if (!this.currentBoardWidth) this.currentBoardWidth = boardSize.width;\n    const scaleX = panelWidth / this.currentBoardWidth;\n\n    // scaleY\n    const documentHeight = $(document).height()\n    const panelHeight = documentHeight - this.TOOLBAR_HEIGHT;\n    if (!this.currentBoardHeight) this.currentBoardHeight = boardSize.height;\n    const scaleY = panelHeight / this.currentBoardHeight;\n\n    return Math.min(scaleX, scaleY)\n  }\n}\n"],"sourceRoot":"/source/"}